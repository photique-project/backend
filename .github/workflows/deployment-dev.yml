name: 개발서버 Spring App 배포

on:
  pull_request:
    branches:
      - "develop"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 소스코드 체크아웃
        uses: actions/checkout@v3

      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: "temurin"

      - name: yml, env 생성
        run: |
          echo "${{ secrets.YML_DEV }}" > ./src/main/resources/application.yml
          echo "${{ secrets.ENV_DEV }}" > ./.env.dev

      - name: 앱 빌드
        run: ./gradlew clean build -x test

      - name: 도커 이미지 빌드 및 푸시
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO_DEV }}:0.1.0 .
          docker push ${{ secrets.DOCKER_REPO_DEV }}:0.1.0

      - name: EC2에 도커컴포즈 복사
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.HOST_DEV }}
          key: ${{ secrets.KEY }}
          source: ./docker-compose.spring.dev.yml, ./.env.dev
          target: /home/ubuntu

      - name: EC2 연결 및 도커컴포즈 실행
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.HOST_DEV }}
          key: ${{ secrets.KEY }}
          script: |
            sudo docker-compose -f docker-compose.spring.dev.yml down
            sudo docker-compose -f docker-compose.spring.dev.yml pull
            sudo docker-compose --env-file .env.dev -f docker-compose.spring.dev.yml up -d
            sudo docker image prune -f
